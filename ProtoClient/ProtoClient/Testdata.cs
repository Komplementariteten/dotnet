// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: testdata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtoClient {

  /// <summary>Holder for reflection information generated from testdata.proto</summary>
  public static partial class TestdataReflection {

    #region Descriptor
    /// <summary>File descriptor for testdata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TestdataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg50ZXN0ZGF0YS5wcm90bxIMZGF0YXN0cmVhbWVyIlsKB0NvbnRlbnQSCgoC",
            "ZmUYASABKAMSCwoDY3RwGAIgASgDEg8KB2NoYW5uZWwYAyABKAMSJgoEZ2F0",
            "ZRgEIAMoCzIYLmRhdGFzdHJlYW1lci5HYXRlc2lnbmFsIj0KCkdhdGVzaWdu",
            "YWwSEAoIR2F0ZUFUb2YYASABKAMSEAoIR2F0ZUJUb2YYAiABKAMSCwoDQW1w",
            "GAMgASgDQg6qAgtQcm90b0NsaWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoClient.Content), global::ProtoClient.Content.Parser, new[]{ "Fe", "Ctp", "Channel", "Gate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoClient.Gatesignal), global::ProtoClient.Gatesignal.Parser, new[]{ "GateATof", "GateBTof", "Amp" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Content : pb::IMessage<Content> {
    private static readonly pb::MessageParser<Content> _parser = new pb::MessageParser<Content>(() => new Content());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Content> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoClient.TestdataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Content() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Content(Content other) : this() {
      fe_ = other.fe_;
      ctp_ = other.ctp_;
      channel_ = other.channel_;
      gate_ = other.gate_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Content Clone() {
      return new Content(this);
    }

    /// <summary>Field number for the "fe" field.</summary>
    public const int FeFieldNumber = 1;
    private long fe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Fe {
      get { return fe_; }
      set {
        fe_ = value;
      }
    }

    /// <summary>Field number for the "ctp" field.</summary>
    public const int CtpFieldNumber = 2;
    private long ctp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Ctp {
      get { return ctp_; }
      set {
        ctp_ = value;
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private long channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "gate" field.</summary>
    public const int GateFieldNumber = 4;
    private static readonly pb::FieldCodec<global::ProtoClient.Gatesignal> _repeated_gate_codec
        = pb::FieldCodec.ForMessage(34, global::ProtoClient.Gatesignal.Parser);
    private readonly pbc::RepeatedField<global::ProtoClient.Gatesignal> gate_ = new pbc::RepeatedField<global::ProtoClient.Gatesignal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoClient.Gatesignal> Gate {
      get { return gate_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Content);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Content other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fe != other.Fe) return false;
      if (Ctp != other.Ctp) return false;
      if (Channel != other.Channel) return false;
      if(!gate_.Equals(other.gate_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fe != 0L) hash ^= Fe.GetHashCode();
      if (Ctp != 0L) hash ^= Ctp.GetHashCode();
      if (Channel != 0L) hash ^= Channel.GetHashCode();
      hash ^= gate_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fe != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Fe);
      }
      if (Ctp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Ctp);
      }
      if (Channel != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Channel);
      }
      gate_.WriteTo(output, _repeated_gate_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fe != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fe);
      }
      if (Ctp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ctp);
      }
      if (Channel != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Channel);
      }
      size += gate_.CalculateSize(_repeated_gate_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Content other) {
      if (other == null) {
        return;
      }
      if (other.Fe != 0L) {
        Fe = other.Fe;
      }
      if (other.Ctp != 0L) {
        Ctp = other.Ctp;
      }
      if (other.Channel != 0L) {
        Channel = other.Channel;
      }
      gate_.Add(other.gate_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Fe = input.ReadInt64();
            break;
          }
          case 16: {
            Ctp = input.ReadInt64();
            break;
          }
          case 24: {
            Channel = input.ReadInt64();
            break;
          }
          case 34: {
            gate_.AddEntriesFrom(input, _repeated_gate_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Gatesignal : pb::IMessage<Gatesignal> {
    private static readonly pb::MessageParser<Gatesignal> _parser = new pb::MessageParser<Gatesignal>(() => new Gatesignal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Gatesignal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoClient.TestdataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gatesignal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gatesignal(Gatesignal other) : this() {
      gateATof_ = other.gateATof_;
      gateBTof_ = other.gateBTof_;
      amp_ = other.amp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gatesignal Clone() {
      return new Gatesignal(this);
    }

    /// <summary>Field number for the "GateATof" field.</summary>
    public const int GateATofFieldNumber = 1;
    private long gateATof_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GateATof {
      get { return gateATof_; }
      set {
        gateATof_ = value;
      }
    }

    /// <summary>Field number for the "GateBTof" field.</summary>
    public const int GateBTofFieldNumber = 2;
    private long gateBTof_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GateBTof {
      get { return gateBTof_; }
      set {
        gateBTof_ = value;
      }
    }

    /// <summary>Field number for the "Amp" field.</summary>
    public const int AmpFieldNumber = 3;
    private long amp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amp {
      get { return amp_; }
      set {
        amp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Gatesignal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Gatesignal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GateATof != other.GateATof) return false;
      if (GateBTof != other.GateBTof) return false;
      if (Amp != other.Amp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GateATof != 0L) hash ^= GateATof.GetHashCode();
      if (GateBTof != 0L) hash ^= GateBTof.GetHashCode();
      if (Amp != 0L) hash ^= Amp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GateATof != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(GateATof);
      }
      if (GateBTof != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(GateBTof);
      }
      if (Amp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GateATof != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GateATof);
      }
      if (GateBTof != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GateBTof);
      }
      if (Amp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Gatesignal other) {
      if (other == null) {
        return;
      }
      if (other.GateATof != 0L) {
        GateATof = other.GateATof;
      }
      if (other.GateBTof != 0L) {
        GateBTof = other.GateBTof;
      }
      if (other.Amp != 0L) {
        Amp = other.Amp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GateATof = input.ReadInt64();
            break;
          }
          case 16: {
            GateBTof = input.ReadInt64();
            break;
          }
          case 24: {
            Amp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
